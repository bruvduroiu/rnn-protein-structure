---
seq_length: 700
n_amino: 22
n_structures: 8

embedding_layer:
  units: 50
  activation: !!python/name:tensorflow.python.ops.gen_nn_ops.relu ''

conv1:
  # Conv Layer #1: [3 x 50] kernel size
  filters: 64 
  kernel_size: [3, 50]
  padding: same 
  strides: 1
  activation: !!python/name:tensorflow.python.ops.gen_nn_ops.relu ''
conv2:
  # Conv Layer #2: [7 x 50] kernel size
  filters: 64
  kernel_size: [7, 50]
  padding: same
  strides: 1
  activation: !!python/name:tensorflow.python.ops.gen_nn_ops.relu ''
conv3:
  # Conv Layer #3: [11 x 50] kernel size
  filters: 64
  kernel_size: [11, 50]
  padding: same
  strides: 1
  activation: !!python/name:tensorflow.python.ops.gen_nn_ops.relu ''

gru_layer1:
  num_units: 300
  activation: !!python/name:tensorflow.python.ops.math_ops.tanh ''

gru_layer2:
  num_units: 300
  activation: !!python/name:tensorflow.python.ops.math_ops.tanh ''

gru_layer3:
  num_units: 300
  activation: !!python/name:tensorflow.python.ops.math_ops.tanh ''

gru_dropout: 0.5

fc_1:
  units: 300
  activation: !!python/name:tensorflow.python.ops.gen_nn_ops.relu ''

fc_2:
  units: 300
  activation: !!python/name:tensorflow.python.ops.gen_nn_ops.relu ''

fc_dropout: 0.5

out:
  units: 8
  activation: !!python/name:tensorflow.python.ops.nn_ops.softmax ''

# 22 labels
inputs: ['A', 'C', 'E', 'D', 'G', 'F', 'I', 'H', 'K', 'M', 'L', 'N', 'Q', 'P', 'S', 'R', 'T', 'W', 'V', 'Y', 'X', 'NoSeq']
labels: ['L', 'B', 'E', 'G', 'I', 'H', 'S', 'T','NoSeq']
...